(* Content-type: application/vnd.wolfram.mathematica *)

(*** Wolfram Notebook File ***)
(* http://www.wolfram.com/nb *)

(* CreatedBy='Mathematica 11.0' *)

(*CacheID: 234*)
(* Internal cache information:
NotebookFileLineBreakTest
NotebookFileLineBreakTest
NotebookDataPosition[       158,          7]
NotebookDataLength[     55243,       1365]
NotebookOptionsPosition[     50202,       1277]
NotebookOutlinePosition[     50597,       1293]
CellTagsIndexPosition[     50554,       1290]
WindowFrame->Normal*)

(* Beginning of Notebook Content *)
Notebook[{
Cell["\<\
The following is an incomplete set of functions to export Mathematica \
formulas to Python functions. While you could conceivably use simpy, I find \
that this is somewhat easier and does not require third-party libraries. It \
is also a useful example of how to manipulate Mathematica expressions with \
pattern matching.\
\>", "Text",
 CellChangeTimes->{{3.71480577394792*^9, 
  3.714805840251181*^9}},ExpressionUUID->"a6836ccd-5276-4eb4-a699-\
3b0f07360c1e"],

Cell["\<\
The core routine is simply a loop that converts an expression to Python, \
preceding it with variable definitions that have been created along the \
process.\
\>", "Text",
 CellChangeTimes->{{3.7148058465391145`*^9, 
  3.7148058811393056`*^9}},ExpressionUUID->"2d0e8051-1084-4c67-ba63-\
7cddcc5b88c2"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ToPython", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"ToPython", "[", 
    RowBox[{"expression_", ",", 
     RowBox[{"extravars_", ":", 
      RowBox[{"{", "}"}]}], ",", 
     RowBox[{"outputvar_", ":", "\"\<output\>\""}], ",", 
     RowBox[{"indent_", ":", "\"\<\>\""}]}], "]"}], ":=", 
   "\[IndentingNewLine]", 
   RowBox[{"Block", "[", 
    RowBox[{
     RowBox[{"{", "\[IndentingNewLine]", 
      RowBox[{"(*", " ", 
       RowBox[{
       "Python", " ", "code", " ", "that", " ", "precedes", " ", "our", " ", 
        RowBox[{"expression", ".", "\[IndentingNewLine]", " ", "Includes"}], 
        " ", "auxiliary", " ", "vars", " ", "and", " ", "functions"}], " ", 
       "*)"}], "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PythonBuffer", "=", "\"\<\>\""}], ",", "\[IndentingNewLine]", 
       
       RowBox[{"(*", " ", 
        RowBox[{
        "Last", " ", "number", " ", "of", " ", "defined", " ", "variable"}], 
        " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"PythonVar", "=", "0"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{
        "Spaces", " ", "to", " ", "indent", " ", "each", " ", "line", " ", 
         "of", " ", "Python", " ", "code"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"PythonIndent", "=", "indent"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Was", " ", 
         RowBox[{"Sqrt", "[", "]"}], " ", 
         RowBox[{"used", "?", " ", "Then"}], " ", "we", " ", "have", " ", 
         "to", " ", "define", " ", "it"}], " ", "*)"}], "\[IndentingNewLine]", 
       RowBox[{"PythonSqrt", "=", "False"}], ",", "\[IndentingNewLine]", 
       RowBox[{"(*", " ", 
        RowBox[{"Was", " ", "Pi", " ", 
         RowBox[{"used", "?", " ", "We"}], " ", "define", " ", "\[Pi]", " ", 
         "variable", " ", "in", " ", "Python"}], " ", "*)"}], 
       "\[IndentingNewLine]", 
       RowBox[{"PythonPi", "=", "False"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"(*", " ", 
      RowBox[{
       RowBox[{"We", " ", "begin", " ", "by", " ", 
        RowBox[{"parsing", " ", "'"}], 
        RowBox[{"extravars", "'"}], " ", "which", " ", "is", " ", "a", " ", 
        "list", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{"var1", ",", " ", "exp1"}], "}"}], ",", 
          RowBox[{"{", 
           RowBox[{"var2", ",", "exp2"}], "}"}], ",", "..."}], "}"}], 
        "\[IndentingNewLine]", "of", " ", "variables", " ", "that", " ", 
        "are", " ", "used", " ", "in", " ", "our", " ", 
        RowBox[{"formula", ".", " ", "This"}], " ", "is", " ", "used", " ", 
        "for", "\[IndentingNewLine]", "simplifying", " ", "expressions"}], 
       ",", " ", 
       RowBox[{"as", " ", "shown", " ", "later", " ", 
        RowBox[{"on", "."}]}]}], " ", "*)"}], "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"Do", "[", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"Module", "[", 
         RowBox[{
          RowBox[{"{", 
           RowBox[{
            RowBox[{"var", "=", 
             RowBox[{"def", "[", 
              RowBox[{"[", "1", "]"}], "]"}]}], ",", 
            RowBox[{"value", "=", 
             RowBox[{"def", "[", 
              RowBox[{"[", "2", "]"}], "]"}]}]}], "}"}], ",", 
          "\[IndentingNewLine]", 
          RowBox[{"PythonBuffer", "=", 
           RowBox[{"PythonBuffer", "<>", "PythonIndent", "<>", 
            RowBox[{"ToString", "[", "var", "]"}], "<>", "\"\<=\>\"", "<>", 
            RowBox[{"ToPython2", "[", "value", "]"}], "<>", 
            "\"\<;\\n\>\""}]}]}], "]"}], ",", "\[IndentingNewLine]", 
        RowBox[{"{", 
         RowBox[{"def", ",", "extravars"}], "}"}]}], "]"}], ";", 
      "\[IndentingNewLine]", 
      RowBox[{"(*", "\[IndentingNewLine]", "  ", 
       RowBox[{
        RowBox[{
        "The", " ", "actual", " ", "conversion", " ", "takes", " ", "place", 
         " ", "here"}], ",", " ", 
        RowBox[{
        "recursively", "\[IndentingNewLine]", " ", "calling", " ", "the", " ",
          "function", " ", "ToPython2"}], ",", " ", 
        RowBox[{"which", " ", "does", " ", "the", " ", 
         RowBox[{"work", "."}]}]}], "\[IndentingNewLine]", " ", "*)"}], 
      "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", 
         RowBox[{"aux", "=", 
          RowBox[{"ToPython2", "[", "expression", "]"}]}], "}"}], ",", 
        "\[IndentingNewLine]", 
        RowBox[{"(*", " ", 
         RowBox[{
          RowBox[{"If", " ", 
           RowBox[{"Sqrt", "[", "]"}], " ", "was", " ", "used"}], ",", " ", 
          RowBox[{
          "we", " ", "introduce", " ", "a", " ", "function", " ", "that", " ",
            "works", " ", "with", "\[IndentingNewLine]", "  ", "complex", " ",
            "numbers"}], ",", " ", 
          RowBox[{"since", " ", 
           RowBox[{"np", ".", "sqrt"}], " ", "does", " ", "not"}]}], " ", 
         "*)"}], "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"If", "[", 
          RowBox[{"PythonSqrt", ",", "\[IndentingNewLine]", 
           RowBox[{"PythonBuffer", "=", 
            RowBox[{
            "PythonIndent", "<>", 
             "\"\<def mysqrt(x): return np.sqrt((1.+0j)*x)\\n\\n\>\"", "<>", 
             "PythonBuffer"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Define", " ", "\[Pi]", " ", "as", " ", "a", " ", "Python", " ", 
           "variable"}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{"If", "[", 
          RowBox[{"PythonPi", ",", "\[IndentingNewLine]", 
           RowBox[{"PythonBuffer", "=", 
            RowBox[{
            "PythonIndent", "<>", "\"\<\[Pi]=math.pi;\\n\\n\>\"", "<>", 
             "PythonBuffer"}]}]}], "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"(*", " ", 
          RowBox[{
          "Output", " ", "Python", " ", "code", " ", "preceded", " ", "by", 
           " ", "all", " ", "variable", " ", 
           RowBox[{"definitions", "."}]}], " ", "*)"}], "\[IndentingNewLine]", 
         RowBox[{
         "PythonBuffer", "<>", "PythonIndent", "<>", "outputvar", "<>", 
          "\"\<=\>\"", "<>", "aux", "<>", "\"\<;\\n\>\""}]}]}], "]"}]}]}], 
    "]"}]}], ";"}]}], "Input",
 CellChangeTimes->{{3.714805863995676*^9, 3.714806071798952*^9}},
 CellLabel->
  "In[2645]:=",ExpressionUUID->"6d7c981a-e395-457d-aeff-7388a367be8e"],

Cell["\<\
The following is a key piece of code. Essentially, PythonWrap converts an \
expression into Python. If that expression is too long, it is stored in an \
auxiliary variable. We do this to make the code more readable. It also takes \
care (in a very imperfect way) of parenthesis.\
\>", "Text",
 CellChangeTimes->{{3.714806076363162*^9, 
  3.714806131251169*^9}},ExpressionUUID->"2a00ae08-52f3-424b-a4d5-\
5ef90ffd8c47"],

Cell[BoxData[{
 RowBox[{
  RowBox[{"Clear", "[", "ToPythonVar", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ToPythonVar", "[", "a_", "]"}], ":=", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"name", "=", 
        RowBox[{"\"\<aux\>\"", "<>", 
         RowBox[{"ToString", "[", "PythonVar", "]"}]}]}], "}"}], ",", 
      "\[IndentingNewLine]", 
      RowBox[{
       RowBox[{"PythonBuffer", "=", 
        RowBox[{
        "PythonBuffer", "<>", "PythonIndent", "<>", "name", "<>", "\"\<=\>\"",
          "<>", "a", "<>", "\"\<;\\n\>\""}]}], ";", "\[IndentingNewLine]", 
       RowBox[{"PythonVar", "=", 
        RowBox[{"PythonVar", "+", "1"}]}], ";", "\[IndentingNewLine]", 
       "name"}]}], "]"}]}], ";"}], 
  "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "AlreadyWrapped", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"AlreadyWrapped", "[", "s_", "]"}], ":=", 
    RowBox[{
     RowBox[{"(", 
      RowBox[{
       RowBox[{"StringPosition", "[", 
        RowBox[{"s", ",", "\"\<(\>\""}], "]"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{"1", ",", "1"}], "}"}], "}"}]}], ")"}], "&&", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{"StringPosition", "[", 
        RowBox[{"s", ",", "\"\<)\>\""}], "]"}], "\[Equal]", 
       RowBox[{"{", 
        RowBox[{"{", 
         RowBox[{
          RowBox[{"StringLength", "[", "s", "]"}], ",", 
          RowBox[{"StringLength", "[", "s", "]"}]}], "}"}], "}"}]}], 
      ")"}]}]}], ";"}], "\[IndentingNewLine]"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{"Clear", "[", "PythonWrap", "]"}], ";"}], "\[IndentingNewLine]", 
 RowBox[{
  RowBox[{
   RowBox[{"PythonWrap", "[", 
    RowBox[{"expa_", ",", 
     RowBox[{"limit_", ":", "600"}]}], "]"}], ":=", "\[IndentingNewLine]", 
   RowBox[{"Module", "[", 
    RowBox[{
     RowBox[{"{", 
      RowBox[{"a", "=", 
       RowBox[{"ToPython2", "[", "expa", "]"}]}], "}"}], ",", 
     "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"StringLength", "[", "a", "]"}], ">", "limit"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"ToPythonVar", "[", "a", "]"}], ",", "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Not", "[", 
           RowBox[{"AtomQ", "[", "expa", "]"}], "]"}], "&&", 
          RowBox[{"!", 
           RowBox[{"AlreadyWrapped", "[", "a", "]"}]}]}], ",", 
         "\[IndentingNewLine]", 
         RowBox[{"\"\<(\>\"", "<>", "a", "<>", "\"\<)\>\""}], ",", 
         "\[IndentingNewLine]", "a"}], "]"}]}], "]"}]}], "]"}]}], 
  ";"}]}], "Input",
 CellChangeTimes->{{3.7147280588921475`*^9, 3.71472847792723*^9}, {
   3.7147285301011763`*^9, 3.7147285337920303`*^9}, {3.7147285734391193`*^9, 
   3.7147287393509483`*^9}, {3.714730740835744*^9, 3.7147307637387114`*^9}, {
   3.7147308644072504`*^9, 3.71473088121015*^9}, {3.714730922668334*^9, 
   3.7147309759396734`*^9}, {3.7147310215055676`*^9, 3.714731035817973*^9}, {
   3.7147310738257504`*^9, 3.7147310993150253`*^9}, {3.7147311385093727`*^9, 
   3.7147312545277743`*^9}, {3.71473130586526*^9, 3.714731311342312*^9}, {
   3.714731523161806*^9, 3.7147319638739753`*^9}, {3.714731996976762*^9, 
   3.714732234323004*^9}, {3.7147324208167787`*^9, 3.7147324215701065`*^9}, {
   3.7147324846008277`*^9, 3.714732514624278*^9}, {3.714732544880668*^9, 
   3.7147326560833797`*^9}, {3.7147326962001123`*^9, 
   3.7147327139369645`*^9}, {3.7147327556513977`*^9, 3.714732784061017*^9}, {
   3.7147328200164394`*^9, 3.714732832258009*^9}, {3.7147328792940807`*^9, 
   3.714733058632985*^9}, {3.7147331160513325`*^9, 3.7147331580657306`*^9}, {
   3.7147332046312933`*^9, 3.7147332991360803`*^9}, {3.714733330503126*^9, 
   3.714733375560923*^9}, {3.714733436424821*^9, 3.714733438236446*^9}, {
   3.71473347514571*^9, 3.7147334784629173`*^9}, {3.7147336437826815`*^9, 
   3.7147336481829033`*^9}, {3.7147336872549086`*^9, 
   3.7147337093584805`*^9}, {3.71473374412983*^9, 3.714733752337072*^9}, {
   3.7147338783672934`*^9, 3.714733936247692*^9}, {3.7147340328418875`*^9, 
   3.7147341736080713`*^9}, {3.714734218358507*^9, 3.714734312101856*^9}, {
   3.714734352321475*^9, 3.714734366366227*^9}, {3.7147344087821355`*^9, 
   3.7147344797911453`*^9}, {3.714734522408616*^9, 3.71473453658136*^9}, {
   3.714734578211076*^9, 3.7147347086892567`*^9}, {3.7147347436772504`*^9, 
   3.7147347535898995`*^9}, {3.7147347921411543`*^9, 
   3.7147347958871455`*^9}, {3.71473485379753*^9, 3.7147348595275497`*^9}, {
   3.714734990429813*^9, 3.7147351125760574`*^9}, {3.714735603038391*^9, 
   3.71473560575518*^9}, {3.7147357284060974`*^9, 3.7147357807020073`*^9}, {
   3.7147365033244696`*^9, 3.7147365533222103`*^9}, 3.7147366063063927`*^9, {
   3.7147367337637787`*^9, 3.7147367347542233`*^9}, {3.7147370260916977`*^9, 
   3.7147370340306473`*^9}, {3.7147371864496264`*^9, 
   3.7147373716410685`*^9}, {3.7147374234520593`*^9, 
   3.7147375075165033`*^9}, {3.7147375416526403`*^9, 3.714737549034314*^9}, {
   3.7147376239369783`*^9, 3.7147377491617785`*^9}, {3.714737812275239*^9, 
   3.714737843725829*^9}, {3.7147386184577885`*^9, 3.7147386254537725`*^9}, {
   3.7147387687906475`*^9, 3.714738833870376*^9}, {3.7147388843509083`*^9, 
   3.7147389482301245`*^9}, {3.7147390016326647`*^9, 3.714739064570006*^9}, {
   3.714739095734868*^9, 3.7147392186026163`*^9}, {3.714739339647521*^9, 
   3.714739495705353*^9}, {3.714739555218461*^9, 3.7147395571339664`*^9}, {
   3.7147396746144247`*^9, 3.714739710929316*^9}, {3.7147398390895705`*^9, 
   3.714739855039546*^9}, {3.714739906584563*^9, 3.714739947338665*^9}, {
   3.7147400476379995`*^9, 3.7147401199552126`*^9}, {3.714740194415708*^9, 
   3.714740225476508*^9}, {3.7147402821293263`*^9, 3.7147404667192593`*^9}, {
   3.71474052985758*^9, 3.7147405349435663`*^9}, {3.7147410996956167`*^9, 
   3.7147410999249225`*^9}, {3.7147412301257772`*^9, 3.714741261188238*^9}, 
   3.7148058448030186`*^9, {3.7148061349583783`*^9, 3.7148061412843285`*^9}, {
   3.9458788143266907`*^9, 3.945878818284828*^9}},
 CellLabel->
  "In[2647]:=",ExpressionUUID->"058dac82-bf97-4108-969f-87699bf400b0"],

Cell["\<\
Then comes the actual conversion. We only have included some conversions that \
are needed in our code. Feel free to add more. It is easy!\
\>", "Text",
 CellChangeTimes->{{3.714806145866866*^9, 
  3.7148061649232726`*^9}},ExpressionUUID->"8fc87700-cdba-4e36-8da8-\
631a59e91912"],

Cell[BoxData[
 RowBox[{
  RowBox[{"(*", " ", 
   RowBox[{
   "Conversions", " ", "for", " ", "the", " ", "most", " ", "common", " ", 
    "expressions"}], " ", "*)"}], "\[IndentingNewLine]", 
  RowBox[{
   RowBox[{
    RowBox[{"Clear", "[", "ToPython2", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ToPython2", "[", 
      RowBox[{"Sqrt", "[", "x_", "]"}], "]"}], ":=", 
     RowBox[{"Module", "[", 
      RowBox[{
       RowBox[{"{", "}"}], ",", "\[IndentingNewLine]", 
       RowBox[{
        RowBox[{"PythonSqrt", "=", "True"}], ";", "\[IndentingNewLine]", 
        RowBox[{"\"\<mysqrt(\>\"", "<>", 
         RowBox[{"PythonWrap", "[", "x", "]"}], "<>", "\"\<)\>\""}]}]}], 
      "]"}]}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"Log", "[", "x_", "]"}], "]"}], ":=", 
    RowBox[{"\"\<np.log(\>\"", "<>", 
     RowBox[{"PythonWrap", "[", "x", "]"}], "<>", "\"\<)\>\""}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"Exp", "[", "x_", "]"}], "]"}], ":=", 
    RowBox[{"\"\<np.exp(\>\"", "<>", 
     RowBox[{"PythonWrap", "[", "x", "]"}], "<>", "\"\<)\>\""}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"Sin", "[", "x_", "]"}], "]"}], ":=", 
    RowBox[{"\"\<np.sin(\>\"", "<>", 
     RowBox[{"PythonWrap", "[", "x", "]"}], "<>", "\"\<)\>\""}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"Cos", "[", "x_", "]"}], "]"}], ":=", 
    RowBox[{"\"\<np.cos(\>\"", "<>", 
     RowBox[{"PythonWrap", "[", "x", "]"}], "<>", "\"\<)\>\""}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     SuperscriptBox["\[ExponentialE]", "x_"], "]"}], ":=", 
    RowBox[{"\"\<np.exp(\>\"", "<>", 
     RowBox[{"PythonWrap", "[", "x", "]"}], "<>", "\"\<)\>\""}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"E", "^", "x_"}], "]"}], ":=", 
    RowBox[{"\"\<np.exp(\>\"", "<>", 
     RowBox[{"PythonWrap", "[", "x", "]"}], "<>", "\"\<)\>\""}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"a_", "+", "b_"}], "]"}], ":=", 
    RowBox[{"ToPythonOp", "[", 
     RowBox[{"\"\<+\>\"", ",", "a", ",", "b"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"a_", "*", "b_"}], "]"}], ":=", 
    RowBox[{"ToPythonOp", "[", 
     RowBox[{"\"\<*\>\"", ",", "a", ",", "b"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"a_", "-", "b_"}], "]"}], ":=", 
    RowBox[{"ToPythonOp", "[", 
     RowBox[{"\"\<-\>\"", ",", "a", ",", "b"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"a_", "/", "b_"}], "]"}], ":=", 
    RowBox[{"ToPythonOp", "[", 
     RowBox[{"\"\</\>\"", ",", "a", ",", "b"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"a_", "^", "2"}], "]"}], ":=", 
    RowBox[{"\"\<(\>\"", "<>", 
     RowBox[{"PythonWrap", "[", "a", "]"}], "<>", "\"\<**2)\>\""}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"a_", "^", "b_"}], "]"}], ":=", 
    RowBox[{"PythonWrap", "[", 
     RowBox[{"ToPythonOp", "[", 
      RowBox[{"\"\<**\>\"", ",", "a", ",", "b"}], "]"}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ToPython2", "[", 
      RowBox[{"x_", "?", "NumberQ"}], "]"}], ":=", "\[IndentingNewLine]", 
     RowBox[{"If", "[", 
      RowBox[{
       RowBox[{
        RowBox[{"Head", "[", "x", "]"}], "===", "Complex"}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"\"\<(\>\"", "<>", 
        RowBox[{"ToPython2", "[", 
         RowBox[{"Re", "[", "x", "]"}], "]"}], "<>", "\"\<+\>\"", "<>", 
        RowBox[{"ToPython2", "[", 
         RowBox[{"Im", "[", "x", "]"}], "]"}], "<>", "\"\<j)\>\""}], ",", 
       "\[IndentingNewLine]", 
       RowBox[{"If", "[", 
        RowBox[{
         RowBox[{
          RowBox[{"Head", "[", "x", "]"}], " ", "===", "Rational"}], ",", 
         RowBox[{"\"\<(\>\"", "<>", 
          RowBox[{"ToPythonOp", "[", 
           RowBox[{"\"\</\>\"", ",", 
            RowBox[{"Numerator", "[", "x", "]"}], ",", 
            RowBox[{"Denominator", "[", "x", "]"}]}], "]"}], "<>", 
          "\"\<)\>\""}], ",", 
         RowBox[{"ToString", "[", 
          RowBox[{"N", "[", "x", "]"}], "]"}]}], "]"}]}], "]"}]}], ";"}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", 
     RowBox[{"-", "x_"}], "]"}], ":=", 
    RowBox[{"\"\<(-\>\"", "<>", 
     RowBox[{"ToPython2", "[", "x", "]"}], "<>", "\"\<)\>\""}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", "\[Pi]", "]"}], ":=", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", "}"}], ",", 
      RowBox[{
       RowBox[{"PythonPi", "=", "True"}], ";", "\"\<\[Pi]\>\""}]}], "]"}]}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", "\[Gamma]", "]"}], ":=", "\"\<\[Gamma]\>\""}], 
   "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", "\[CapitalOmega]", "]"}], ":=", 
    "\"\<\[CapitalOmega]\>\""}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"ToPython2", "[", "\[CapitalDelta]", "]"}], ":=", 
    "\"\<\[CapitalDelta]\>\""}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ToPython2", "[", "x_", "]"}], ":=", 
     RowBox[{"ToString", "[", "x", "]"}]}], ";"}], "\[IndentingNewLine]", 
   "\[IndentingNewLine]", 
   RowBox[{"(*", " ", 
    RowBox[{
    "This", " ", "is", " ", "for", " ", "converting", " ", "inline", " ", 
     "operations"}], " ", "*)"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{"Clear", "[", "ToPythonOp", "]"}], ";"}], "\[IndentingNewLine]", 
   RowBox[{
    RowBox[{
     RowBox[{"ToPythonOp", "[", 
      RowBox[{"op_", ",", "expa_", ",", "expb_"}], "]"}], ":=", 
     "\[IndentingNewLine]", 
     RowBox[{
      RowBox[{"PythonWrap", "[", "expa", "]"}], "<>", "op", "<>", 
      RowBox[{"PythonWrap", "[", "expb", "]"}]}]}], ";"}]}]}]], "Input",
 CellChangeTimes->{{3.714806168380881*^9, 3.7148061930925913`*^9}, {
  3.8866875146692724`*^9, 3.886687525164281*^9}, {3.8866876992436085`*^9, 
  3.88668771158359*^9}, {3.886687911957412*^9, 3.8866879226118374`*^9}},
 CellLabel->
  "In[2653]:=",ExpressionUUID->"ad99e4c6-437d-4931-bef8-c2269ad082fc"],

Cell["One example of use", "Text",
 CellChangeTimes->{{3.714806196619082*^9, 
  3.714806198794927*^9}},ExpressionUUID->"c12eaca1-fa42-4c44-a6e9-\
1aeadbdaa7d3"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToPython", "[", 
  RowBox[{"Exp", "[", 
   RowBox[{"g", "*", 
    RowBox[{
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "3"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             SuperscriptBox["\[Pi]", "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}]]}]}], ")"}], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "]"}], "/", 
     RowBox[{"Log", "[", 
      RowBox[{
       RowBox[{"(", 
        RowBox[{
         RowBox[{"-", "1"}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             SuperscriptBox["\[Pi]", "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}]]}]}], ")"}], " ", 
       SuperscriptBox["\[CapitalOmega]", "2"]}], "]"}]}]}], "]"}], 
  "]"}]], "Input",
 CellChangeTimes->{
  3.714733238398271*^9, {3.714734882085868*^9, 3.714734903599966*^9}, 
   3.714735134228116*^9},
 CellLabel->
  "In[1458]:=",ExpressionUUID->"14fc35ea-713b-4813-b320-73da152294d9"],

Cell[BoxData["\<\"\[Pi]=math.pi;\\n\\ndef mysqrt(x): return \
np.sqrt((1.+0j)*x)\\n\\naux0=-3.+((2.*((\[Pi]**2)*(\[Gamma]**2)))+(2.*(\[Pi]*(\
\[Gamma]*(mysqrt((-1.+((\[Pi]**2)*(\[Gamma]**2)))))))));\\naux1=-1.+((2.*((\
\[Pi]**2)*(\[Gamma]**2)))+(2.*(\[Pi]*(\[Gamma]*(mysqrt((-1.+((\[Pi]**2)*(\
\[Gamma]**2)))))))));\\noutput=(aux0*(\[CapitalOmega]**2))**(g/(np.log((aux1*(\
\[CapitalOmega]**2)))));\\n\"\>"], "Output",
 CellChangeTimes->{
  3.714733101737248*^9, {3.7147331361527834`*^9, 3.714733162035652*^9}, {
   3.7147332103185225`*^9, 3.7147332594965534`*^9}, 3.7147333806236677`*^9, 
   3.7147334599302845`*^9, 3.7147334949449296`*^9, {3.7147348950554457`*^9, 
   3.7147349042323856`*^9}, {3.714735124711671*^9, 3.7147351352481256`*^9}, {
   3.714736598135808*^9, 3.7147366119709363`*^9}, 3.7147375219643946`*^9, 
   3.71473771955263*^9, 3.714737758986186*^9, 3.714737848907398*^9, {
   3.7147394764077134`*^9, 3.714739498691456*^9}, 3.714740478683316*^9, 
   3.7147405378274813`*^9, 3.7147412683346996`*^9, 3.7148062059971113`*^9, 
   3.8863708618161125`*^9, 3.8877161838502035`*^9, 3.945786198646481*^9},
 CellLabel->
  "Out[1458]=",ExpressionUUID->"ecd960ce-84db-4674-b8e3-dad60732364b"]
}, Open  ]],

Cell["This is a more complicated example:", "Text",
 CellChangeTimes->{{3.714805656341395*^9, 
  3.7148056601398*^9}},ExpressionUUID->"95633a86-d686-4cec-849f-7a757ed969b2"],

Cell[BoxData[
 RowBox[{
  RowBox[{
   RowBox[{
    RowBox[{"ExpP", "[", 
     RowBox[{
     "\[CapitalOmega]_", ",", "\[CapitalDelta]_", ",", " ", "g_", ",", " ", 
      "\[Gamma]_"}], "]"}], ":=", " ", 
    RowBox[{"Exp", "[", 
     RowBox[{
      RowBox[{"-", 
       RowBox[{"(", 
        RowBox[{
         RowBox[{
          SuperscriptBox["g", "2"], " ", 
          RowBox[{"(", 
           RowBox[{
            RowBox[{"2", " ", "\[Pi]", " ", 
             SqrtBox[
              FractionBox[
               RowBox[{"1", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Pi]", "2"], " ", 
                 SuperscriptBox["\[Gamma]", "2"]}], "+", 
                RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}]]}]}], 
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Pi]", "2"], " ", 
                 SuperscriptBox["\[Gamma]", "2"]}], "+", 
                RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}]]}]}]]], " ", 
             SuperscriptBox["\[CapitalDelta]", "5"], " ", "\[CapitalOmega]"}],
             "-", 
            RowBox[{
             RowBox[{"(", 
              RowBox[{"1", "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Pi]", "2"], " ", 
                SuperscriptBox["\[Gamma]", "2"]}], "-", 
               RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{
                   SuperscriptBox["\[Pi]", "2"], " ", 
                   SuperscriptBox["\[Gamma]", "2"]}]}]]}]}], ")"}], " ", 
             SuperscriptBox["\[CapitalOmega]", "4"]}]}], ")"}], " ", 
          RowBox[{"Log", "[", 
           RowBox[{"-", 
            FractionBox["1", 
             RowBox[{
              SqrtBox[
               RowBox[{"1", "-", 
                RowBox[{"2", " ", 
                 SuperscriptBox["\[Pi]", "2"], " ", 
                 SuperscriptBox["\[Gamma]", "2"]}], "+", 
                RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
                 SqrtBox[
                  RowBox[{
                   RowBox[{"-", "1"}], "+", 
                   RowBox[{
                    SuperscriptBox["\[Pi]", "2"], " ", 
                    SuperscriptBox["\[Gamma]", "2"]}]}]]}]}]], " ", 
              "\[CapitalOmega]"}]]}], "]"}]}], "+", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[CapitalDelta]", "5"], " ", "\[CapitalOmega]", " ", 
          RowBox[{"Log", "[", 
           FractionBox["1", 
            RowBox[{
             SqrtBox[
              RowBox[{"1", "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["\[Pi]", "2"], " ", 
                SuperscriptBox["\[Gamma]", "2"]}], "+", 
               RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
                SqrtBox[
                 RowBox[{
                  RowBox[{"-", "1"}], "+", 
                  RowBox[{
                   SuperscriptBox["\[Pi]", "2"], " ", 
                   SuperscriptBox["\[Gamma]", "2"]}]}]]}]}]], " ", 
             "\[CapitalOmega]"}]], "]"}]}], "-", 
         RowBox[{"2", " ", 
          SuperscriptBox["\[Pi]", "2"], " ", 
          SuperscriptBox["\[Gamma]", "2"], " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{
                SuperscriptBox["\[Pi]", "2"], " ", 
                SuperscriptBox["\[Gamma]", "2"]}]}]]}]}]], " ", 
          SuperscriptBox["\[CapitalOmega]", "6"], " ", 
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Pi]", "2"], " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{
                  SuperscriptBox["\[Pi]", "2"], " ", 
                  SuperscriptBox["\[Gamma]", "2"]}]}]]}]}], ")"}], " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "]"}]}], "+", 
         RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
          SqrtBox[
           RowBox[{
            RowBox[{"-", "1"}], "+", 
            RowBox[{
             SuperscriptBox["\[Pi]", "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
          SqrtBox[
           RowBox[{"1", "-", 
            RowBox[{"2", " ", 
             SuperscriptBox["\[Pi]", "2"], " ", 
             SuperscriptBox["\[Gamma]", "2"]}], "+", 
            RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
             SqrtBox[
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{
                SuperscriptBox["\[Pi]", "2"], " ", 
                SuperscriptBox["\[Gamma]", "2"]}]}]]}]}]], " ", 
          SuperscriptBox["\[CapitalOmega]", "6"], " ", 
          RowBox[{"Log", "[", 
           RowBox[{
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Pi]", "2"], " ", 
               SuperscriptBox["\[Gamma]", "2"]}], "+", 
              RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
               SqrtBox[
                RowBox[{
                 RowBox[{"-", "1"}], "+", 
                 RowBox[{
                  SuperscriptBox["\[Pi]", "2"], " ", 
                  SuperscriptBox["\[Gamma]", "2"]}]}]]}]}], ")"}], " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "]"}]}]}], ")"}]}], "/", 
      RowBox[{"(", 
       RowBox[{"\[Pi]", " ", 
        SqrtBox[
         RowBox[{
          RowBox[{"-", "1"}], "+", 
          RowBox[{
           SuperscriptBox["\[Pi]", "2"], " ", 
           SuperscriptBox["\[Gamma]", "2"]}]}]], " ", 
        SqrtBox[
         RowBox[{"1", "-", 
          RowBox[{"2", " ", 
           SuperscriptBox["\[Pi]", "2"], " ", 
           SuperscriptBox["\[Gamma]", "2"]}], "+", 
          RowBox[{"2", " ", "\[Pi]", " ", "\[Gamma]", " ", 
           SqrtBox[
            RowBox[{
             RowBox[{"-", "1"}], "+", 
             RowBox[{
              SuperscriptBox["\[Pi]", "2"], " ", 
              SuperscriptBox["\[Gamma]", "2"]}]}]]}]}]], " ", 
        SuperscriptBox[
         RowBox[{"(", 
          RowBox[{
           SuperscriptBox["\[CapitalDelta]", "4"], "+", 
           RowBox[{"2", " ", 
            RowBox[{"(", 
             RowBox[{
              RowBox[{"-", "1"}], "+", 
              RowBox[{"2", " ", 
               SuperscriptBox["\[Pi]", "2"], " ", 
               SuperscriptBox["\[Gamma]", "2"]}]}], ")"}], " ", 
            SuperscriptBox["\[CapitalDelta]", "2"], " ", 
            SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
           SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}], "2"]}], ")"}]}], 
     "]"}]}], ";"}], "\[IndentingNewLine]"}]], "Input",
 CellChangeTimes->{{3.698565838364592*^9, 3.69856589189324*^9}, {
   3.698566441642161*^9, 3.698566459618937*^9}, 3.698566577350696*^9, {
   3.69856662866551*^9, 3.698566641770298*^9}, {3.698566742952484*^9, 
   3.6985667581828337`*^9}, {3.6985671284505787`*^9, 3.698567147748344*^9}, {
   3.6985680732705507`*^9, 3.6985680752971992`*^9}, {3.6985681064070263`*^9, 
   3.698568110904233*^9}, {3.6985681811053257`*^9, 3.69856818665193*^9}, {
   3.6985882824409723`*^9, 3.6985882911556253`*^9}, {3.700897972732787*^9, 
   3.7008980310996943`*^9}, {3.700898110246846*^9, 3.700898113778957*^9}, {
   3.7008989340283737`*^9, 3.70089894342194*^9}, {3.701491854670836*^9, 
   3.701491866755329*^9}, {3.701491914466011*^9, 3.701491916352087*^9}, {
   3.701492283185144*^9, 3.701492289675894*^9}, {3.701495527557707*^9, 
   3.701495544340198*^9}, 3.708860386614855*^9, 3.714730725280631*^9, {
   3.7148056168716755`*^9, 3.7148056335366106`*^9}},
 CellLabel->
  "In[1459]:=",ExpressionUUID->"6bbfa07f-da87-4b55-95f0-f9b02da0d983"],

Cell["\<\
We export to Python after simplifying the expression a little bit, to \
reducethe number of variables.\
\>", "Text",
 CellChangeTimes->{{3.7147413546085854`*^9, 
  3.7147413682087984`*^9}},ExpressionUUID->"d9aaf56c-018f-4035-818a-\
ae52cab55deb"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Code", "=", 
  RowBox[{"Block", "[", 
   RowBox[{
    RowBox[{"{", 
     RowBox[{"$Assumptions", "=", 
      RowBox[{"{", 
       RowBox[{
        RowBox[{"\[CapitalOmega]", ">", "0"}], ",", 
        RowBox[{"\[Gamma]", ">", "0"}], ",", 
        RowBox[{"y", ">", "0"}]}], "}"}]}], "}"}], ",", "\[IndentingNewLine]", 
    RowBox[{"Module", "[", 
     RowBox[{
      RowBox[{"{", 
       RowBox[{"aux", "=", 
        RowBox[{"ExpP", "[", 
         RowBox[{
         "\[CapitalOmega]", ",", "\[CapitalDelta]", ",", " ", "g", ",", " ", 
          "\[Gamma]"}], "]"}]}], "}"}], ",", "\[IndentingNewLine]", 
      RowBox[{"Module", "[", 
       RowBox[{
        RowBox[{"{", "\[IndentingNewLine]", 
         RowBox[{"vars", "=", 
          RowBox[{"{", 
           RowBox[{
            RowBox[{"{", 
             RowBox[{"y", ",", 
              RowBox[{"\[Gamma]", " ", "\[Pi]"}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"x", ",", 
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["y", "2"]}]]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"z", ",", 
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "x", " ", "y"}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["y", "2"]}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"w", ",", 
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "x", " ", "y"}], " ", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["y", "2"]}]}]}], "}"}], ",", 
            RowBox[{"{", 
             RowBox[{"u", ",", 
              SqrtBox[
               FractionBox["z", "w"]]}], "}"}]}], "}"}]}], 
         "\[IndentingNewLine]", "}"}], ",", "\[IndentingNewLine]", 
        RowBox[{
         RowBox[{"aux", "=", 
          RowBox[{"Simplify", "[", 
           RowBox[{"aux", "/.", 
            RowBox[{"{", 
             RowBox[{"\[Gamma]", "\[Rule]", 
              RowBox[{"y", "/", "\[Pi]"}]}], "}"}]}], "]"}]}], ";", 
         "\[IndentingNewLine]", 
         RowBox[{"aux", "=", 
          RowBox[{"Simplify", "[", 
           RowBox[{"aux", "/.", 
            RowBox[{"{", 
             RowBox[{
              SqrtBox[
               RowBox[{
                RowBox[{"-", "1"}], "+", 
                SuperscriptBox["y", "2"]}]], "\[Rule]", "x"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"aux", "=", 
          RowBox[{"Simplify", "[", 
           RowBox[{"aux", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{"1", "+", 
               RowBox[{"2", " ", "x", " ", "y"}], "-", 
               RowBox[{"2", " ", 
                SuperscriptBox["y", "2"]}]}], "\[Rule]", "z"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"aux", "=", 
          RowBox[{"Simplify", "[", 
           RowBox[{"aux", "/.", 
            RowBox[{"{", 
             RowBox[{
              RowBox[{
               RowBox[{"-", "1"}], "+", 
               RowBox[{"2", " ", "x", " ", "y"}], " ", "+", 
               RowBox[{"2", " ", 
                SuperscriptBox["y", "2"]}]}], "\[Rule]", "w"}], "}"}]}], 
           "]"}]}], ";", "\[IndentingNewLine]", 
         RowBox[{"aux", "=", 
          RowBox[{"Simplify", "[", 
           RowBox[{"aux", "/.", 
            RowBox[{"{", 
             RowBox[{
              SqrtBox[
               FractionBox["z", "w"]], "\[Rule]", "u"}], "}"}]}], "]"}]}], 
         ";", "\[IndentingNewLine]", 
         RowBox[{"Print", "[", "aux", "]"}], ";", "\[IndentingNewLine]", 
         RowBox[{"ToPython", "[", 
          RowBox[{
          "aux", ",", "vars", ",", "\"\<output\>\"", ",", "\"\<    \>\""}], 
          RowBox[{"(*", " ", "Indentation", " ", "*)"}], "]"}]}]}], 
       "\[IndentingNewLine]", "]"}]}], "]"}]}], "]"}]}]], "Input",
 CellChangeTimes->CompressedData["
1:eJxTTMoPSmViYGAQAWIQvetFaov32teOFv5TukH0nX1OM0D0jtfaa8Di/Aab
QPQrwSvbQbSzn/pBEF0pf+0IiP7leuw2iP5/I/YpiJbo+/ASRO8xCXgHop98
OvcJRLu+dP4Mou2qX/wG0ULvfrL7AOneB6dlQHTJbB01EP33b5IuiE6LuwKm
E9SaI0D05DNXwPTCW1ekfIH0jye/pEH03ccnjP2AtO3VEDMQvUrX3ApEn+L8
4AyiHz057AeiJ0ibp4LoODPPVhB9RvpyN4jWcS2eAKKfzTKcBKI3KrfOBNHJ
yZ9mgeiKizoLQHSb0OSFIDrH/+2XXCD9SbLlD4gGAA03r0Y=
  "],
 CellLabel->
  "In[1460]:=",ExpressionUUID->"13f917ba-5e3b-42c2-94a4-84a4e9b64732"],

Cell[BoxData[
 SuperscriptBox["\[ExponentialE]", 
  RowBox[{"-", 
   FractionBox[
    RowBox[{"\[CapitalOmega]", " ", 
     RowBox[{"(", 
      RowBox[{
       RowBox[{
        SuperscriptBox["g", "2"], " ", 
        RowBox[{"(", 
         RowBox[{
          RowBox[{"2", " ", "\[Pi]", " ", "u", " ", 
           SuperscriptBox["\[CapitalDelta]", "5"]}], "+", 
          RowBox[{"w", " ", 
           SuperscriptBox["\[CapitalOmega]", "3"]}]}], ")"}], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"-", 
          FractionBox["1", 
           RowBox[{
            SqrtBox["z"], " ", "\[CapitalOmega]"}]]}], "]"}]}], "+", 
       RowBox[{"2", " ", 
        SuperscriptBox["\[CapitalDelta]", "5"], " ", 
        RowBox[{"Log", "[", 
         FractionBox["1", 
          RowBox[{
           SqrtBox["z"], " ", "\[CapitalOmega]"}]], "]"}]}], "+", 
       RowBox[{"2", " ", 
        RowBox[{"(", 
         RowBox[{"x", "-", "y"}], ")"}], " ", "y", " ", 
        SqrtBox["z"], " ", 
        SuperscriptBox["\[CapitalOmega]", "5"], " ", 
        RowBox[{"Log", "[", 
         RowBox[{"w", " ", 
          SuperscriptBox["\[CapitalOmega]", "2"]}], "]"}]}]}], ")"}]}], 
    RowBox[{"\[Pi]", " ", 
     SqrtBox[
      RowBox[{
       RowBox[{"-", "1"}], "+", 
       SuperscriptBox["y", "2"]}]], " ", 
     SqrtBox["z"], " ", 
     SuperscriptBox[
      RowBox[{"(", 
       RowBox[{
        SuperscriptBox["\[CapitalDelta]", "4"], "+", 
        RowBox[{"2", " ", 
         RowBox[{"(", 
          RowBox[{
           RowBox[{"-", "1"}], "+", 
           RowBox[{"2", " ", 
            SuperscriptBox["y", "2"]}]}], ")"}], " ", 
         SuperscriptBox["\[CapitalDelta]", "2"], " ", 
         SuperscriptBox["\[CapitalOmega]", "2"]}], "+", 
        SuperscriptBox["\[CapitalOmega]", "4"]}], ")"}], "2"]}]]}]]], "Print",\

 CellChangeTimes->{3.71474099753652*^9, 3.7147410391108294`*^9, 
  3.714741318685417*^9, 3.714741358178559*^9, 3.7147414104073987`*^9, 
  3.7147414871597557`*^9, 3.7147415336729407`*^9, 3.714806208143749*^9, 
  3.8863709140840287`*^9, 3.8877161929534054`*^9, 3.945786199665794*^9},
 CellLabel->
  "During evaluation of \
In[1460]:=",ExpressionUUID->"861b15b9-08a6-485d-8cfd-7159776b9b9b"],

Cell[BoxData["\<\"    \[Pi]=math.pi;\\n\\n    def mysqrt(x): return \
np.sqrt((1.+0j)*x)\\n\\n    y=\[Pi]*\[Gamma];\\n    \
x=mysqrt((-1.+(y**2)));\\n    z=1.+((2.*(x*y))+(-2.*(y**2)));\\n    \
w=-1.+((2.*(x*y))+(2.*(y**2)));\\n    u=mysqrt((z/w));\\n    \
aux0=(g**2)*(((2.*(\[Pi]*(u*(\[CapitalDelta]**5.))))+(w*(\[CapitalOmega]**3.))\
)*(np.log((((-z**(-1./2.)))/\[CapitalOmega]))));\\n    aux1=(2.*((\
\[CapitalDelta]**5.)*(np.log(((z**(-1./2.))/\[CapitalOmega])))))+(2.*((x-y)*(\
y*((mysqrt(z))*((\[CapitalOmega]**5.)*(np.log((w*(\[CapitalOmega]**2)))))))));\
\\n    aux2=(((\[CapitalDelta]**4.)+((2.*((-1.+(2.*(y**2)))*((\[CapitalDelta]*\
*2)*(\[CapitalOmega]**2))))+(\[CapitalOmega]**4.)))**-2.)*(aux0+aux1);\\n    \
output=np.exp((((-((-1.+(y**2))**(-1./2.))*((z**(-1./2.))*(\[CapitalOmega]*\
aux2))))/\[Pi]));\\n\"\>"], "Output",
 CellChangeTimes->{3.714806208168769*^9, 3.8863709141130357`*^9, 
  3.887716192999242*^9, 3.945786199667725*^9},
 CellLabel->
  "Out[1460]=",ExpressionUUID->"9e2eab4f-2066-4090-a4ec-f4a2fa567b93"]
}, Open  ]],

Cell["\<\
This code can be exported to a Python file in Unicode format (so that Greek \
characters can be used)\
\>", "Text",
 CellChangeTimes->{{3.714805690139448*^9, 3.71480569537115*^9}, {
  3.7148057483393836`*^9, 
  3.714805762668*^9}},ExpressionUUID->"b45475cf-a6e8-491f-a582-f85fc4389f84"],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Export", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"NotebookDirectory", "[", "]"}], "<>", "\"\<foo.py\>\""}], ",", 
   "Code", ",", "\"\<Text\>\"", ",", 
   RowBox[{"CharacterEncoding", "\[Rule]", "\"\<Unicode\>\""}]}], 
  "]"}]], "Input",
 CellChangeTimes->{{3.7148057418524723`*^9, 3.7148057460123253`*^9}},
 CellLabel->
  "In[1461]:=",ExpressionUUID->"ed6c70d2-22b4-4c15-ab5b-138d9a91d569"],

Cell[BoxData["\<\"/home/michallote/Documents/programming/UAV_MBSE_bkp/\
mathematica/foo.py\"\>"], "Output",
 CellChangeTimes->{3.714806208708612*^9, 3.886370939484576*^9, 
  3.945786199736113*^9},
 CellLabel->
  "Out[1461]=",ExpressionUUID->"facdf4bb-384e-4e9a-bebf-c2cd4a2f5143"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToPython2", "[", 
  RowBox[{"-", 
   RowBox[{"(", 
    RowBox[{"1", "/", "122"}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8866867392398205`*^9, 3.88668679768526*^9}, {
  3.8866876501224337`*^9, 3.886687656698924*^9}},
 CellLabel->
  "In[1462]:=",ExpressionUUID->"5ea9cc68-e37f-415e-88a6-e9704c94b5ef"],

Cell[BoxData["\<\"(-1./122.)\"\>"], "Output",
 CellChangeTimes->{{3.8866867511889405`*^9, 3.8866867984164395`*^9}, {
   3.8866876475814886`*^9, 3.886687657263989*^9}, 3.886687730772319*^9, 
   3.8866879958590717`*^9, 3.945786199775036*^9},
 CellLabel->
  "Out[1462]=",ExpressionUUID->"9dfb777d-c62d-405b-ad13-460d935209e1"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"1", "/", "12"}]], "Input",
 CellChangeTimes->{{3.8866868413025727`*^9, 3.886686841938888*^9}},
 CellLabel->
  "In[1463]:=",ExpressionUUID->"5175be42-dcd0-4bf1-baac-34010c4b7724"],

Cell[BoxData[
 FractionBox["1", "12"]], "Output",
 CellChangeTimes->{3.945786199799448*^9},
 CellLabel->
  "Out[1463]=",ExpressionUUID->"5d6dc563-83f8-403c-810b-47233bbefd83"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[{
 RowBox[{"ToPython2", "[", 
  RowBox[{
   RowBox[{"(", 
    RowBox[{"1", "/", "12"}], ")"}], "*", "a"}], "]"}], "\[IndentingNewLine]", 
 RowBox[{"ToPythonOp", "[", 
  RowBox[{"\"\</\>\"", ",", 
   RowBox[{"1", "*", "a"}], ",", "12"}], "]"}]}], "Input",
 CellChangeTimes->{{3.8866868543942976`*^9, 3.886686900135609*^9}, {
  3.8866869342864494`*^9, 3.886686987064273*^9}},
 CellLabel->
  "In[1464]:=",ExpressionUUID->"916f57e9-3d7f-4680-847e-91398deccfc9"],

Cell[BoxData["\<\" a1  b1  c1\\n{--, --, --}\\n 12  12  12\"\>"], "Output",
 CellChangeTimes->{{3.886686952056903*^9, 3.886686987271139*^9}, 
   3.8866875466298575`*^9, 3.886687661081954*^9, {3.886687999813365*^9, 
   3.886688001941245*^9}, 3.945786199826792*^9},
 CellLabel->
  "Out[1464]=",ExpressionUUID->"904166ff-8187-41cb-b15d-24d7120ef141"],

Cell[BoxData["\<\"({a1, b1, c1})/12.\"\>"], "Output",
 CellChangeTimes->{{3.886686952056903*^9, 3.886686987271139*^9}, 
   3.8866875466298575`*^9, 3.886687661081954*^9, {3.886687999813365*^9, 
   3.886688001941245*^9}, 3.9457861998348217`*^9},
 CellLabel->
  "Out[1465]=",ExpressionUUID->"1a7d3efd-b2b9-4e13-9eac-4e5cbda27a01"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"If", "[", 
  RowBox[{
   RowBox[{
    RowBox[{"Head", "[", 
     RowBox[{"a", "/", "12"}], "]"}], " ", "===", "Rational"}], ",", 
   RowBox[{"ToPythonOp", "[", 
    RowBox[{"\"\</\>\"", ",", 
     RowBox[{"Numerator", "[", 
      FractionBox["1", "12"], "]"}], ",", 
     RowBox[{"Denominator", "[", 
      FractionBox["1", "12"], "]"}]}], "]"}], ",", 
   RowBox[{"ToString", "[", 
    RowBox[{"N", "[", "x", "]"}], "]"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8866870725256205`*^9, 3.8866871402524405`*^9}, {
  3.8866871824414186`*^9, 3.886687186706044*^9}, {3.886687248325757*^9, 
  3.886687254632413*^9}, {3.886687466638693*^9, 3.8866874877152796`*^9}},
 CellLabel->
  "In[1466]:=",ExpressionUUID->"01335163-77dd-4657-95c4-ed5acd061393"],

Cell[BoxData["\<\"x\"\>"], "Output",
 CellChangeTimes->{{3.886687104423613*^9, 3.8866871407722254`*^9}, {
   3.8866871832343884`*^9, 3.8866871870633698`*^9}, {3.886687249963526*^9, 
   3.886687254904379*^9}, 3.945786199850018*^9},
 CellLabel->
  "Out[1466]=",ExpressionUUID->"31b8206b-493f-4eb5-873c-cfc5016f2f90"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"er", " ", "=", " ", 
  RowBox[{"1", "/", "12"}]}]], "Input",
 CellChangeTimes->{{3.8866872755266943`*^9, 3.8866872817050514`*^9}},
 CellLabel->
  "In[1467]:=",ExpressionUUID->"b3ea53d7-fcd5-4612-8b74-25bc28b91d3c"],

Cell[BoxData[
 FractionBox["1", "12"]], "Output",
 CellChangeTimes->{3.8866872822787533`*^9, 3.945786199870141*^9},
 CellLabel->
  "Out[1467]=",ExpressionUUID->"dc61b47f-3fd5-45b1-bbdf-287c9589c073"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["er"], "Input",
 CellChangeTimes->{{3.886687284001313*^9, 3.8866872902999067`*^9}},
 CellLabel->
  "In[1468]:=",ExpressionUUID->"4590fe0c-fd45-4489-9ff5-2d7e7f623d2f"],

Cell[BoxData[
 FractionBox["1", "12"]], "Output",
 CellChangeTimes->{{3.8866872857061567`*^9, 3.8866872924207277`*^9}, 
   3.945786199890156*^9},
 CellLabel->
  "Out[1468]=",ExpressionUUID->"78a41430-b8e1-4890-9261-1a29f75e27f0"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToPythonOp", "[", 
  RowBox[{"\"\</\>\"", ",", "1", ",", "12"}], "]"}]], "Input",
 CellChangeTimes->{{3.8866873725802045`*^9, 3.8866873937463474`*^9}, {
  3.8866875827456017`*^9, 3.886687583817027*^9}},
 CellLabel->
  "In[1469]:=",ExpressionUUID->"48b64ebc-d4ab-4dca-bb59-466f6ba8fd98"],

Cell[BoxData["\<\"1./12.\"\>"], "Output",
 CellChangeTimes->{{3.8866873730968323`*^9, 3.886687394031165*^9}, 
   3.8866875850199013`*^9, 3.945786199910522*^9},
 CellLabel->
  "Out[1469]=",ExpressionUUID->"b30ddc73-a552-4911-ba7c-172885eab2b6"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData["er"], "Input",
 CellChangeTimes->{{3.886687439832475*^9, 3.886687440005458*^9}},
 CellLabel->
  "In[1470]:=",ExpressionUUID->"133339b3-467f-45fc-b5bf-576ce1451413"],

Cell[BoxData[
 FractionBox["1", "12"]], "Output",
 CellChangeTimes->{{3.8866874403108144`*^9, 3.8866874470175304`*^9}, 
   3.9457861999339333`*^9},
 CellLabel->
  "Out[1470]=",ExpressionUUID->"441c8994-fabd-41fd-b24d-c4307bf28f62"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Denominator", "[", 
  FractionBox["1", "12"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[1471]:=",ExpressionUUID->"81d93ee4-c7b0-4441-9997-791c0a46ad33"],

Cell[BoxData["12"], "Output",
 CellChangeTimes->{3.8866874487105055`*^9, 3.94578619995545*^9},
 CellLabel->
  "Out[1471]=",ExpressionUUID->"8b351a73-8c6a-4d05-ae39-b1ad91b0a02b"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"Numerator", "[", 
  FractionBox["1", "12"], "]"}]], "Input",
 NumberMarks->False,
 CellLabel->
  "In[1472]:=",ExpressionUUID->"c82542f5-b405-485f-9785-fdf55eddd741"],

Cell[BoxData["1"], "Output",
 CellChangeTimes->{3.8866874425710144`*^9, 3.945786199976256*^9},
 CellLabel->
  "Out[1472]=",ExpressionUUID->"ba8d9b87-4342-4941-9e5b-271a4da5e21c"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToPython2", "[", 
  RowBox[{
   RowBox[{"-", 
    RowBox[{"(", 
     RowBox[{"1", "/", "12"}], ")"}]}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"xf", "^", "2"}], "+", 
     RowBox[{"xf", " ", "xi"}], "+", 
     RowBox[{"xi", "^", "2"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{
      RowBox[{"-", "xi"}], " ", "yf"}], "+", 
     RowBox[{"xf", " ", "yi"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.887716245639962*^9, 3.887716251086658*^9}},
 CellLabel->
  "In[1473]:=",ExpressionUUID->"027747c5-0a80-4f2a-a3d5-7939563bcb8c"],

Cell[BoxData["\<\"(-1./12.)*(((xf**2)+((xf*xi)+(xi**2)))*((xf*yi)-(xi*yf)))\"\
\>"], "Output",
 CellChangeTimes->{3.8877162524722853`*^9, 3.9233647258015995`*^9, 
  3.945786200000086*^9},
 CellLabel->
  "Out[1473]=",ExpressionUUID->"2051bf83-3943-4ca5-b622-23a3b92481b9"]
}, Open  ]],

Cell[CellGroupData[{

Cell[BoxData[
 RowBox[{"ToPython2", "[", 
  RowBox[{
   RowBox[{"1", "/", "12"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"xi", " ", "yf"}], "-", 
     RowBox[{"xf", " ", "yi"}]}], ")"}], " ", 
   RowBox[{"(", 
    RowBox[{
     RowBox[{"yf", "^", "2"}], "+", 
     RowBox[{"yf", " ", "yi"}], "+", 
     RowBox[{"yi", "^", "2"}]}], ")"}]}], "]"}]], "Input",
 CellChangeTimes->{{3.8877164211594753`*^9, 3.887716425867302*^9}},
 CellLabel->
  "In[1474]:=",ExpressionUUID->"4927ccf0-2b85-4026-97a8-f25e5adf6fb6"],

Cell[BoxData["\<\"(1./12.)*(((xi*yf)-(xf*yi))*((yf**2)+((yf*yi)+(yi**2))))\"\>\
"], "Output",
 CellChangeTimes->{3.887716439696309*^9, 3.923364728581773*^9, 
  3.945786200021551*^9},
 CellLabel->
  "Out[1474]=",ExpressionUUID->"e3f637ef-f377-4f6d-9882-09928b17ba8e"]
}, Open  ]],

Cell[BoxData["#"], "Input",
 CellChangeTimes->{{3.9459857736820717`*^9, 
  3.945985776072446*^9}},ExpressionUUID->"48ca5114-1da1-460a-8282-\
abef1878042b"]
},
WindowSize->{1440, 782.25},
WindowMargins->{{1440, Automatic}, {0, Automatic}},
FrontEndVersion->"14.1 for Linux x86 (64-bit) (July 16, 2024)",
StyleDefinitions->"Default.nb",
ExpressionUUID->"c8145f0c-6a14-4bd6-948e-f0407c3a6be9"
]
(* End of Notebook Content *)

(* Internal cache information *)
(*CellTagsOutline
CellTagsIndex->{}
*)
(*CellTagsIndex
CellTagsIndex->{}
*)
(*NotebookFileOutline
Notebook[{
Cell[558, 20, 471, 9, 55, "Text",ExpressionUUID->"a6836ccd-5276-4eb4-a699-3b0f07360c1e"],
Cell[1032, 31, 311, 7, 33, "Text",ExpressionUUID->"2d0e8051-1084-4c67-ba63-7cddcc5b88c2"],
Cell[1346, 40, 6504, 146, 746, "Input",ExpressionUUID->"6d7c981a-e395-457d-aeff-7388a367be8e"],
Cell[7853, 188, 428, 8, 55, "Text",ExpressionUUID->"2a00ae08-52f3-424b-a4d5-5ef90ffd8c47"],
Cell[8284, 198, 6288, 125, 369, "Input",ExpressionUUID->"058dac82-bf97-4108-969f-87699bf400b0"],
Cell[14575, 325, 290, 6, 33, "Text",ExpressionUUID->"8fc87700-cdba-4e36-8da8-631a59e91912"],
Cell[14868, 333, 6419, 168, 681, "Input",ExpressionUUID->"ad99e4c6-437d-4931-bef8-c2269ad082fc"],
Cell[21290, 503, 160, 3, 33, "Text",ExpressionUUID->"c12eaca1-fa42-4c44-a6e9-1aeadbdaa7d3"],
Cell[CellGroupData[{
Cell[21475, 510, 1474, 42, 39, "Input",ExpressionUUID->"14fc35ea-713b-4813-b320-73da152294d9"],
Cell[22952, 554, 1196, 17, 188, "Output",ExpressionUUID->"ecd960ce-84db-4674-b8e3-dad60732364b"]
}, Open  ]],
Cell[24163, 574, 173, 2, 33, "Text",ExpressionUUID->"95633a86-d686-4cec-849f-7a757ed969b2"],
Cell[24339, 578, 8774, 211, 277, "Input",ExpressionUUID->"6bbfa07f-da87-4b55-95f0-f9b02da0d983"],
Cell[33116, 791, 256, 6, 33, "Text",ExpressionUUID->"d9aaf56c-018f-4035-818a-ae52cab55deb"],
Cell[CellGroupData[{
Cell[33397, 801, 4426, 114, 371, "Input",ExpressionUUID->"13f917ba-5e3b-42c2-94a4-84a4e9b64732"],
Cell[37826, 917, 2206, 60, 54, "Print",ExpressionUUID->"861b15b9-08a6-485d-8cfd-7159776b9b9b"],
Cell[40035, 979, 1034, 15, 308, "Output",ExpressionUUID->"9e2eab4f-2066-4090-a4ec-f4a2fa567b93"]
}, Open  ]],
Cell[41084, 997, 296, 6, 33, "Text",ExpressionUUID->"b45475cf-a6e8-491f-a582-f85fc4389f84"],
Cell[CellGroupData[{
Cell[41405, 1007, 416, 10, 29, "Input",ExpressionUUID->"ed6c70d2-22b4-4c15-ab5b-138d9a91d569"],
Cell[41824, 1019, 280, 5, 47, "Output",ExpressionUUID->"facdf4bb-384e-4e9a-bebf-c2cd4a2f5143"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42141, 1029, 333, 8, 29, "Input",ExpressionUUID->"5ea9cc68-e37f-415e-88a6-e9704c94b5ef"],
Cell[42477, 1039, 323, 5, 47, "Output",ExpressionUUID->"9dfb777d-c62d-405b-ad13-460d935209e1"]
}, Open  ]],
Cell[CellGroupData[{
Cell[42837, 1049, 202, 4, 29, "Input",ExpressionUUID->"5175be42-dcd0-4bf1-baac-34010c4b7724"],
Cell[43042, 1055, 175, 4, 60, "Output",ExpressionUUID->"5d6dc563-83f8-403c-810b-47233bbefd83"]
}, Open  ]],
Cell[CellGroupData[{
Cell[43254, 1064, 470, 11, 49, "Input",ExpressionUUID->"916f57e9-3d7f-4680-847e-91398deccfc9"],
Cell[43727, 1077, 347, 5, 87, "Output",ExpressionUUID->"904166ff-8187-41cb-b15d-24d7120ef141"],
Cell[44077, 1084, 327, 5, 47, "Output",ExpressionUUID->"1a7d3efd-b2b9-4e13-9eac-4e5cbda27a01"]
}, Open  ]],
Cell[CellGroupData[{
Cell[44441, 1094, 767, 18, 42, "Input",ExpressionUUID->"01335163-77dd-4657-95c4-ed5acd061393"],
Cell[45211, 1114, 314, 5, 47, "Output",ExpressionUUID->"31b8206b-493f-4eb5-873c-cfc5016f2f90"]
}, Open  ]],
Cell[CellGroupData[{
Cell[45562, 1124, 238, 5, 29, "Input",ExpressionUUID->"b3ea53d7-fcd5-4612-8b74-25bc28b91d3c"],
Cell[45803, 1131, 199, 4, 60, "Output",ExpressionUUID->"dc61b47f-3fd5-45b1-bbdf-287c9589c073"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46039, 1140, 180, 3, 29, "Input",ExpressionUUID->"4590fe0c-fd45-4489-9ff5-2d7e7f623d2f"],
Cell[46222, 1145, 229, 5, 60, "Output",ExpressionUUID->"78a41430-b8e1-4890-9261-1a29f75e27f0"]
}, Open  ]],
Cell[CellGroupData[{
Cell[46488, 1155, 310, 6, 29, "Input",ExpressionUUID->"48b64ebc-d4ab-4dca-bb59-466f6ba8fd98"],
Cell[46801, 1163, 243, 4, 47, "Output",ExpressionUUID->"b30ddc73-a552-4911-ba7c-172885eab2b6"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47081, 1172, 178, 3, 29, "Input",ExpressionUUID->"133339b3-467f-45fc-b5bf-576ce1451413"],
Cell[47262, 1177, 231, 5, 60, "Output",ExpressionUUID->"441c8994-fabd-41fd-b24d-c4307bf28f62"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47530, 1187, 191, 5, 42, "Input",ExpressionUUID->"81d93ee4-c7b0-4441-9997-791c0a46ad33"],
Cell[47724, 1194, 178, 3, 47, "Output",ExpressionUUID->"8b351a73-8c6a-4d05-ae39-b1ad91b0a02b"]
}, Open  ]],
Cell[CellGroupData[{
Cell[47939, 1202, 189, 5, 42, "Input",ExpressionUUID->"c82542f5-b405-485f-9785-fdf55eddd741"],
Cell[48131, 1209, 178, 3, 47, "Output",ExpressionUUID->"ba8d9b87-4342-4941-9e5b-271a4da5e21c"]
}, Open  ]],
Cell[CellGroupData[{
Cell[48346, 1217, 584, 18, 30, "Input",ExpressionUUID->"027747c5-0a80-4f2a-a3d5-7939563bcb8c"],
Cell[48933, 1237, 271, 5, 47, "Output",ExpressionUUID->"2051bf83-3943-4ca5-b622-23a3b92481b9"]
}, Open  ]],
Cell[CellGroupData[{
Cell[49241, 1247, 518, 15, 30, "Input",ExpressionUUID->"4927ccf0-2b85-4026-97a8-f25e5adf6fb6"],
Cell[49762, 1264, 266, 5, 47, "Output",ExpressionUUID->"e3f637ef-f377-4f6d-9882-09928b17ba8e"]
}, Open  ]],
Cell[50043, 1272, 155, 3, 29, "Input",ExpressionUUID->"48ca5114-1da1-460a-8282-abef1878042b"]
}
]
*)

